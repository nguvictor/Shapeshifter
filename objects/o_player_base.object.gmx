<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// speed            = How many pixels the object can travel per step.
// increase         = Speed to increase per step for left/right movement. Use the value -1 for instant.
// decrease         = Speed to decrease per step for left/right movement. Use the value -1 for instant.
// jumpspeed        = Value for jumping. Total jump height may vary depending on gravity.
// jumps            = Number of jumps allowed. 0, disable jumping, 1 normal jump, 2 double jump, etc.
// tolerance        = Number of pixels above ground to allow for premature jumping.
// delay            = Numbers of steps to allow for jumping after leaving the ground.
// analog           = Boolean to allow analog jumping, meaning an early released key, cuts off the jump.
// factor           = Factor used in analog jumping for gravity. Higher value = earlier cut-off.
// gravity          = Value for gravity to accelerate per step.
// maximum          = Maximum value for gravity. Make -1 for unlimited.
// solid            = Parent solid used in collision checking. Usally an obj_solid or obj_wall.
scr_movement_platformer_setup(
    10, //speed
    2, //increase
    2, //decrease
    40, //jumpspeed
    1, //jumps
    1, //tolerance
    2, //delay
    true, //analog
    2, //factor
    5, //gravity
    -1, //maximum
    o_solid //solid
);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//physics_world_draw_debug(1);
image_speed = 0.25;
health = 100;

controller_number = 0;
player_number = 0;
player_state = NONE;
//player_gravity = 30;
//phy_rotation = 0;
//phy_fixed_rotation = true;

//Player Handling
//jump_force = 10;
//run_speed = 10;
//stop_speed = 1.0; //stop_speed the speed the player slows when not moving

//Player Sprites
none_sprite = spr_player_green;
melee_sprite = spr_player_green_melee;
range_sprite = spr_player_green_range;
block_sprite = spr_player_green_block;

//keys
jump_key = vk_up;
left_key = vk_left;
right_key = vk_right;
melee_key = vk_numpad1;
range_key = vk_numpad2;
block_key = vk_numpad3;

//joystick buttons
jump_joystick = 2;
melee_joy = 3;
range_joy = 4;
block_joy = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>physics_apply_impulse(x,y,phy_speed_x*300,phy_speed_y*300);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>player_state = NONE;
sprite_index = none_sprite;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(player_state == NONE){
    scr_movement_platformer(left_key,right_key,jump_key,controller_number+1);
      //Morph
      if(keyboard_check(melee_key)){
        player_state = MELEE;
        o = instance_create(x,y,o_player_melee);
        o.player_number = player_number;
        
        instance_destroy();
      }else if(keyboard_check(range_key)){
        player_state = RANGE;
        o = instance_change(o_player_range,false);
        o.player_number = player_number;
        instance_destroy();
      }else if(keyboard_check(block_key)){
        player_state = BLOCK;
        o = instance_change(o_player_range,false);
        o.player_number = player_number;
        instance_destroy();
      }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_block_base">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_range_base">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_melee_base">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_player_base">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_solid">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
